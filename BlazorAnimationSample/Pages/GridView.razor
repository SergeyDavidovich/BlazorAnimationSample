@page "/gridview"
<h1>Gridview</h1>
@using Syncfusion.Blazor.Grids
<Animate Animation="Animations.ZoomOutUp" DurationMilliseconds="400">
    <SfGrid @ref="grid" ID="ThisGrid" DataSource="@Orders" TValue="@Order" AllowPaging="true" EnableAdaptiveUI="true " AdaptiveUIMode="AdaptiveMode.Mobile"
            AllowGrouping="true" AllowPdfExport="true" EnableVirtualization="false" EnablePersistence="false"
            AllowFiltering="true" AllowSelection="true"
            Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "PdfExport"})">
        <GridPageSettings CurrentPage=1 PageSizes="@pagesizes" PageSize="5"> </GridPageSettings>
        <GridColumns>
            <GridColumn Field=@nameof(Order.OrderID) MaxWidth="60" HeaderText="Order ID" IsPrimaryKey="true" ValidationRules="@(new ValidationRules{ Required=true})"
                        TextAlign="TextAlign.Center"></GridColumn>
            <GridColumn Field=@nameof(Order.CustomerID) MaxWidth="60" HeaderText="Customer Name" ValidationRules="@(new ValidationRules{ Required=true})"
                        TextAlign="TextAlign.Center"></GridColumn>
            <GridColumn Field=@nameof(Order.OrderDate) HeaderText="Order Date" EditType="EditType.DatePickerEdit" Format="d"
                        TextAlign="TextAlign.Center" Type="ColumnType.Date" MaxWidth="60"></GridColumn>
            <GridColumn Field=@nameof(Order.Freight) HeaderText="Freight" Format="C2" TextAlign="TextAlign.Center" EditType="EditType.NumericEdit"
                        MaxWidth="40"></GridColumn>
        </GridColumns>

        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Dialog"></GridEditSettings>
    </SfGrid>
</Animate>

@code {
    SfGrid<Order> grid;
    public List<Order> Orders { get; set; }
    public object[] pagesizes = new object[] { 5, 10, 25, "All" };

    protected override void OnInitialized()
    {
        Orders = Enumerable.Range(1, 75).Select(x => new Order()
            {
                OrderID = 1000 + x,
                CustomerID = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
                Freight = 2.1 * x,
                OrderDate = DateTime.Now.AddDays(-x),
            }).ToList();
    }

    public class Order
    {
        public int? OrderID { get; set; }
        public string CustomerID { get; set; }
        public DateTime? OrderDate { get; set; }
        public double? Freight { get; set; }
    }
}